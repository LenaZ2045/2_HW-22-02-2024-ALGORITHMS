Algorithm Homework_2_Feb_22_24

void test1(int n) MY ANSWER FOR THIS ASYMPTOTIC COMPLEXITY IS O(n^2) because this search goes doudle cycles
{
   if (n==1)
      return;
   for (int i=1; i<=n; i++)
       for (int j=1; j<=n; j++)
           System.out.println("*");
           break;
}

void test2(int n) MY ANSWER FOR THIS ASYMPTOTIC COMPLEXITY IS O(n) because this is linear search "i"-increases "j"-decreases
{
   int a = 0;
   for (i = 0; i < n; i++)
      for (j = n; j > i; j--)
          a = a + i + j;

}


void test3(int n) MY ANSWER FOR THIS ASYMPTOTIC COMPLEXITY IS O(log n) because this search is dividing by half
{
   int i, j, a = 0;
   for (i = n/2; i <=n; i++)
      for (j = 2; j <=n; j=j*2)
          a=a+n/2;

}


*void test4(int n) MY ANSWER FOR THIS ASYMPTOTIC COMPLEXITY IS O(n) because it seems to me that this search is linear
{
   int a = 0, i = n;
   while (i > 0) {
      a += i;
      i /= 2;
   }
}